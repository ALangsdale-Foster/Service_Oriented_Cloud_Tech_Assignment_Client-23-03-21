
package flightsbookingws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "flightsBookingWS", targetNamespace = "http://FlightsBookingWS/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FlightsBookingWS {


    /**
     * 
     * @param price
     * @param origin
     * @param destination
     * @param airline
     * @return
     *     returns java.util.List<flightsbookingws.Flight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bookFlight", targetNamespace = "http://FlightsBookingWS/", className = "flightsbookingws.BookFlight")
    @ResponseWrapper(localName = "bookFlightResponse", targetNamespace = "http://FlightsBookingWS/", className = "flightsbookingws.BookFlightResponse")
    @Action(input = "http://FlightsBookingWS/flightsBookingWS/bookFlightRequest", output = "http://FlightsBookingWS/flightsBookingWS/bookFlightResponse")
    public List<Flight> bookFlight(
        @WebParam(name = "origin", targetNamespace = "")
        String origin,
        @WebParam(name = "destination", targetNamespace = "")
        String destination,
        @WebParam(name = "price", targetNamespace = "")
        float price,
        @WebParam(name = "airline", targetNamespace = "")
        String airline);

    /**
     * 
     * @return
     *     returns flightsbookingws.UnmarshallerResponse.Return
     */
    @WebMethod(operationName = "Unmarshaller")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Unmarshaller", targetNamespace = "http://FlightsBookingWS/", className = "flightsbookingws.Unmarshaller")
    @ResponseWrapper(localName = "UnmarshallerResponse", targetNamespace = "http://FlightsBookingWS/", className = "flightsbookingws.UnmarshallerResponse")
    @Action(input = "http://FlightsBookingWS/flightsBookingWS/UnmarshallerRequest", output = "http://FlightsBookingWS/flightsBookingWS/UnmarshallerResponse")
    public flightsbookingws.UnmarshallerResponse.Return unmarshaller();

    /**
     * 
     * @return
     *     returns java.util.List<flightsbookingws.Flight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAvailableFlights", targetNamespace = "http://FlightsBookingWS/", className = "flightsbookingws.GetAvailableFlights")
    @ResponseWrapper(localName = "getAvailableFlightsResponse", targetNamespace = "http://FlightsBookingWS/", className = "flightsbookingws.GetAvailableFlightsResponse")
    @Action(input = "http://FlightsBookingWS/flightsBookingWS/getAvailableFlightsRequest", output = "http://FlightsBookingWS/flightsBookingWS/getAvailableFlightsResponse")
    public List<Flight> getAvailableFlights();

    /**
     * 
     * @param city1
     * @param type2
     * @param city2
     * @param type
     * @return
     *     returns java.util.List<flightsbookingws.Flight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchFlightCityToCity", targetNamespace = "http://FlightsBookingWS/", className = "flightsbookingws.SearchFlightCityToCity")
    @ResponseWrapper(localName = "searchFlightCityToCityResponse", targetNamespace = "http://FlightsBookingWS/", className = "flightsbookingws.SearchFlightCityToCityResponse")
    @Action(input = "http://FlightsBookingWS/flightsBookingWS/searchFlightCityToCityRequest", output = "http://FlightsBookingWS/flightsBookingWS/searchFlightCityToCityResponse")
    public List<Flight> searchFlightCityToCity(
        @WebParam(name = "Type", targetNamespace = "")
        String type,
        @WebParam(name = "City1", targetNamespace = "")
        String city1,
        @WebParam(name = "Type2", targetNamespace = "")
        String type2,
        @WebParam(name = "City2", targetNamespace = "")
        String city2);

    /**
     * 
     * @param city1
     * @return
     *     returns java.util.List<flightsbookingws.Flight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchFlightToOrFromCity", targetNamespace = "http://FlightsBookingWS/", className = "flightsbookingws.SearchFlightToOrFromCity")
    @ResponseWrapper(localName = "searchFlightToOrFromCityResponse", targetNamespace = "http://FlightsBookingWS/", className = "flightsbookingws.SearchFlightToOrFromCityResponse")
    @Action(input = "http://FlightsBookingWS/flightsBookingWS/searchFlightToOrFromCityRequest", output = "http://FlightsBookingWS/flightsBookingWS/searchFlightToOrFromCityResponse")
    public List<Flight> searchFlightToOrFromCity(
        @WebParam(name = "City1", targetNamespace = "")
        String city1);

    /**
     * 
     * @param origin
     * @param destination
     * @return
     *     returns java.util.List<flightsbookingws.Flight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchFlightDirectFlight", targetNamespace = "http://FlightsBookingWS/", className = "flightsbookingws.SearchFlightDirectFlight")
    @ResponseWrapper(localName = "searchFlightDirectFlightResponse", targetNamespace = "http://FlightsBookingWS/", className = "flightsbookingws.SearchFlightDirectFlightResponse")
    @Action(input = "http://FlightsBookingWS/flightsBookingWS/searchFlightDirectFlightRequest", output = "http://FlightsBookingWS/flightsBookingWS/searchFlightDirectFlightResponse")
    public List<Flight> searchFlightDirectFlight(
        @WebParam(name = "origin", targetNamespace = "")
        String origin,
        @WebParam(name = "destination", targetNamespace = "")
        String destination);

    /**
     * 
     * @param city1
     * @param type
     * @return
     *     returns java.util.List<flightsbookingws.Flight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchFlightForCity", targetNamespace = "http://FlightsBookingWS/", className = "flightsbookingws.SearchFlightForCity")
    @ResponseWrapper(localName = "searchFlightForCityResponse", targetNamespace = "http://FlightsBookingWS/", className = "flightsbookingws.SearchFlightForCityResponse")
    @Action(input = "http://FlightsBookingWS/flightsBookingWS/searchFlightForCityRequest", output = "http://FlightsBookingWS/flightsBookingWS/searchFlightForCityResponse")
    public List<Flight> searchFlightForCity(
        @WebParam(name = "Type", targetNamespace = "")
        String type,
        @WebParam(name = "City1", targetNamespace = "")
        String city1);

}
