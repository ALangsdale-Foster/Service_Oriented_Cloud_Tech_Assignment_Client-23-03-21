/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newworkingclient;

import flightsbookingws.Flight;
import flightsbookingws.FlightPrice;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

/**
 *
 * @author 7734
 */
public class NewWorkingClientJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewWorkingClientJFrame
     */
    public NewWorkingClientJFrame() {
        initComponents();
        ButtonGroup firstGroup = new ButtonGroup();
        firstGroup.add(radio1Origin);
        firstGroup.add(radio1Destination);
        ButtonGroup secondGroup = new ButtonGroup();
        secondGroup.add(radio2Origin);
        secondGroup.add(radio2Destination);
        ButtonGroup thirdGroup = new ButtonGroup();
        thirdGroup.add(radio3Origin);
        thirdGroup.add(radio3Destination); //use button groups to prevent user selecting both options
        updateListView();
        
        List<String> currency = getCurrencyCodes();
	Iterator i = currency.iterator();
        String[] currArray = currency.toArray(new String[currency.size()]);
        while(i.hasNext()) {
            String code = (String) i.next();
            System.out.println("<option id='" + code.substring(0, 3) + "'value='" + code.substring(0, 3) + "'>" + code + "</option>");
        }
        currListBox.setListData(currArray);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        specificCityButton = new javax.swing.JButton();
        cityToCityButton = new javax.swing.JButton();
        C2CText2 = new javax.swing.JTextField();
        radio2Destination = new javax.swing.JRadioButton();
        radio2Origin = new javax.swing.JRadioButton();
        radio1Destination = new javax.swing.JRadioButton();
        radio1Origin = new javax.swing.JRadioButton();
        C2CText1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        SCText = new javax.swing.JTextField();
        radio3Destination = new javax.swing.JRadioButton();
        radio3Origin = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TFCText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        directText1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        directText2 = new javax.swing.JTextField();
        directButton = new javax.swing.JButton();
        toFromCityButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        flightRefresh = new javax.swing.JButton();
        bookButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        currListBox = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        countryTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        specificCityButton.setText("Search");
        specificCityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specificCityButtonActionPerformed(evt);
            }
        });

        cityToCityButton.setText("Search");
        cityToCityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityToCityButtonActionPerformed(evt);
            }
        });

        radio2Destination.setText("Destination");
        radio2Destination.setActionCommand("destination");

        radio2Origin.setText("Origin");
        radio2Origin.setActionCommand("origin");

        radio1Destination.setText("Destination");
        radio1Destination.setActionCommand("destination");
        radio1Destination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio1DestinationActionPerformed(evt);
            }
        });

        radio1Origin.setText("Origin");
        radio1Origin.setActionCommand("origin");

        C2CText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C2CText1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel2.setText("Search Flights - City to City");

        radio3Destination.setText("Destination");

        radio3Origin.setText("Origin");
        radio3Origin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio3OriginActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel3.setText("Search Flights - To or From City");

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel4.setText("Search Flights - For Specific City");

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel5.setText("Search Flights - Direct Flights Only (No Connecting Flights)");

        directText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directText1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Origin");

        jLabel7.setText("Destination");

        directText2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directText2ActionPerformed(evt);
            }
        });

        directButton.setText("Search");
        directButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directButtonActionPerformed(evt);
            }
        });

        toFromCityButton.setText("Search");
        toFromCityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toFromCityButtonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel8.setText("Currency Convert");

        jButton1.setText("Default Currency");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        flightRefresh.setText("Refresh Available Flights");
        flightRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightRefreshActionPerformed(evt);
            }
        });

        bookButton.setText("Book Flight");
        bookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setText("Flights");

        currListBox.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(currListBox);

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        jLabel9.setText("Country Information");

        countryTextArea.setColumns(20);
        countryTextArea.setRows(5);
        jScrollPane3.setViewportView(countryTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(TFCText, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(C2CText2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(directText1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(radio1Origin)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(radio1Destination)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(radio2Origin)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(radio2Destination))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(C2CText1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(directText2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(radio3Origin)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(radio3Destination))
                                .addComponent(SCText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(26, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(bookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(40, 40, 40)
                                    .addComponent(flightRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(specificCityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(directButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(toFromCityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cityToCityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(2, 2, 2)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(144, 144, 144)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 31, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(toFromCityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(directButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(cityToCityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(specificCityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TFCText, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(directText1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(directText2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(jLabel7)))
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(C2CText2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(radio1Destination)
                                    .addComponent(radio1Origin)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(C2CText1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(radio2Destination)
                                    .addComponent(radio2Origin))))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SCText, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radio3Origin)
                            .addComponent(radio3Destination))
                        .addGap(58, 58, 58)
                        .addComponent(jLabel1)
                        .addGap(0, 0, 0)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(flightRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void specificCityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specificCityButtonActionPerformed
        String radioGroup3 = new String();

        if (radio3Origin.isSelected()) {
            radioGroup3 = "origin";
        } else if (radio3Destination.isSelected()) {
            radioGroup3 = "destination";
        }

        updateListSearch(searchFlightForCity(radioGroup3, SCText.getText()));
    }//GEN-LAST:event_specificCityButtonActionPerformed

    private void cityToCityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityToCityButtonActionPerformed
        String radioGroup1 = new String();
        String radioGroup2 = new String();

        if (radio1Origin.isSelected()) {
            radioGroup1 = "origin";
        } else if (radio1Destination.isSelected()) {
            radioGroup1 = "destination";
        }

        if (radio2Origin.isSelected()) {
            radioGroup2 = "origin";
        } else if (radio2Destination.isSelected()) {
            radioGroup2 = "destination";
        }

        if (radioGroup1.equals(radioGroup2)) {
            radioGroup1 = "origin";
            radioGroup2 = "destination"; //sanity check that assumes 1 = origin 2 = destination if both are set to same value
        }

        updateListSearch(searchFlightCityToCity(radioGroup1, C2CText2.getText(), radioGroup2, C2CText1.getText()));

    }//GEN-LAST:event_cityToCityButtonActionPerformed

    private void C2CText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C2CText1ActionPerformed

    }//GEN-LAST:event_C2CText1ActionPerformed

    private void directText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directText1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_directText1ActionPerformed

    private void directButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directButtonActionPerformed
        updateListSearch(searchFlightDirectFlight(directText1.getText(), directText2.getText()));
    }//GEN-LAST:event_directButtonActionPerformed

    private void toFromCityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toFromCityButtonActionPerformed
        String city = TFCText.getText();
        updateListSearch(searchFlightToOrFromCity(city));
    }//GEN-LAST:event_toFromCityButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        currListBox.setSelectedIndex(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void flightRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightRefreshActionPerformed
        updateListView();
    }//GEN-LAST:event_flightRefreshActionPerformed

    private void bookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookButtonActionPerformed
        String[] origin;
        String[] destination;
        String[] price;
        String[] airline;
        String flight = String.valueOf(jList1.getModel().getElementAt(jList1.getSelectedIndex()));
        System.out.println(flight);
        String[] subStrings = flight.split("\\,"); //use regex to split string into constituent data without titles
        origin = subStrings[0].split("\\: ");      //this is done because data pulled from selected list element is one long string
        destination = subStrings[1].split("\\: "); //splitting into constituent data allows for use as parameters in web service
        String[] subPrice = subStrings[2].split("\\: ");
        price = subPrice[1].split("[^0-9.]");
        airline = subStrings[3].split("\\: ");
        System.out.println(origin[1]);
        System.out.println(destination[1]);
        System.out.println(price[0]);
        System.out.println(airline[1]);

        String curr1 = subPrice[1].replaceAll("[0-9.]", "");
        String curr2;
        curr2 = String.valueOf(currListBox.getModel().getElementAt(currListBox.getSelectedIndex()));
        double result = getConversionRate(curr1, curr2.substring(0,3));
        double finalVal = result * Float.parseFloat(price[0]);
        bookFlight(origin[1], destination[1], Float.parseFloat(price[0]), airline[1]);
        String message;
        DecimalFormat df = new DecimalFormat("#,##0.00");
        String decResult = df.format(finalVal);
        message = "Flight From " + origin[1] + " to " + destination[1] + " successfully booked for " + price[0] + curr1 + " / " + decResult + curr2.substring(0,3);
        updateListView();
        JOptionPane.showMessageDialog(null, message, "InfoBox: " + "Successful Booking", JOptionPane.INFORMATION_MESSAGE);
        
        String urlString = "https://restcountries.eu/rest/v2/currency/" + curr2.substring(0,3);
        try {
            URL url = new URL(urlString);
            HttpURLConnection connURL = (HttpURLConnection) url.openConnection();
            connURL.setRequestMethod("GET");
            connURL.connect();
            BufferedReader ins = new BufferedReader(new InputStreamReader(connURL.getInputStream()));
            String inString;
            StringBuilder sb = new StringBuilder();
            while ((inString = ins.readLine()) != null) {
                sb.append(inString);
                sb.append("\n");
            }
            countryTextArea.setLineWrap(true);
            countryTextArea.setWrapStyleWord(true);
            countryTextArea.setText(sb.toString());
            
            
            
            ins.close();
            connURL.disconnect();
        } catch (MalformedURLException ex) {
            Logger.getLogger(NewWorkingClientJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(NewWorkingClientJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bookButtonActionPerformed

    private void directText2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directText2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_directText2ActionPerformed

    private void radio1DestinationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio1DestinationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio1DestinationActionPerformed

    private void radio3OriginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio3OriginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio3OriginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewWorkingClientJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewWorkingClientJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewWorkingClientJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewWorkingClientJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewWorkingClientJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField C2CText1;
    private javax.swing.JTextField C2CText2;
    private javax.swing.JTextField SCText;
    private javax.swing.JTextField TFCText;
    private javax.swing.JButton bookButton;
    private javax.swing.JButton cityToCityButton;
    private javax.swing.JTextArea countryTextArea;
    private javax.swing.JList<String> currListBox;
    private javax.swing.JButton directButton;
    private javax.swing.JTextField directText1;
    private javax.swing.JTextField directText2;
    private javax.swing.JButton flightRefresh;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JRadioButton radio1Destination;
    private javax.swing.JRadioButton radio1Origin;
    private javax.swing.JRadioButton radio2Destination;
    private javax.swing.JRadioButton radio2Origin;
    private javax.swing.JRadioButton radio3Destination;
    private javax.swing.JRadioButton radio3Origin;
    private javax.swing.JButton specificCityButton;
    private javax.swing.JButton toFromCityButton;
    // End of variables declaration//GEN-END:variables

    private static java.util.List<flightsbookingws.Flight> bookFlight(java.lang.String origin, java.lang.String destination, float price, java.lang.String airline) {
        flightsbookingws.FlightsBookingWS_Service service = new flightsbookingws.FlightsBookingWS_Service();
        flightsbookingws.FlightsBookingWS port = service.getFlightsBookingWSPort();
        return port.bookFlight(origin, destination, price, airline);
    }

    private static java.util.List<flightsbookingws.Flight> getAvailableFlights() {
        flightsbookingws.FlightsBookingWS_Service service = new flightsbookingws.FlightsBookingWS_Service();
        flightsbookingws.FlightsBookingWS port = service.getFlightsBookingWSPort();
        return port.getAvailableFlights();
    }

    private static java.util.List<flightsbookingws.Flight> searchFlightCityToCity(java.lang.String type, java.lang.String city1, java.lang.String type2, java.lang.String city2) {
        flightsbookingws.FlightsBookingWS_Service service = new flightsbookingws.FlightsBookingWS_Service();
        flightsbookingws.FlightsBookingWS port = service.getFlightsBookingWSPort();
        return port.searchFlightCityToCity(type, city1, type2, city2);
    }

    private static java.util.List<flightsbookingws.Flight> searchFlightDirectFlight(java.lang.String origin, java.lang.String destination) {
        flightsbookingws.FlightsBookingWS_Service service = new flightsbookingws.FlightsBookingWS_Service();
        flightsbookingws.FlightsBookingWS port = service.getFlightsBookingWSPort();
        return port.searchFlightDirectFlight(origin, destination);
    }

    private static java.util.List<flightsbookingws.Flight> searchFlightForCity(java.lang.String type, java.lang.String city1) {
        flightsbookingws.FlightsBookingWS_Service service = new flightsbookingws.FlightsBookingWS_Service();
        flightsbookingws.FlightsBookingWS port = service.getFlightsBookingWSPort();
        return port.searchFlightForCity(type, city1);
    }

    private static java.util.List<flightsbookingws.Flight> searchFlightToOrFromCity(java.lang.String city1) {
        flightsbookingws.FlightsBookingWS_Service service = new flightsbookingws.FlightsBookingWS_Service();
        flightsbookingws.FlightsBookingWS port = service.getFlightsBookingWSPort();
        return port.searchFlightToOrFromCity(city1);
    }
    
    public void updateListView() {
        List<Flight> returnFlights = getAvailableFlights();
        Iterator availableList = returnFlights.iterator();
        Flight nextFlight;
        FlightPrice price;
        List<String> listData = new ArrayList<String>();
        
        for (int i = 0; i < returnFlights.size(); i++) {
            String listEntry = new String();
            String origin = returnFlights.get(i).getOriginCity();
            String destination = returnFlights.get(i).getDestinationCity();
            String airline = returnFlights.get(i).getFlightAirline();
            BigInteger seats = returnFlights.get(i).getAvailableSeats();
            BigInteger connections = returnFlights.get(i).getConnectionsNumber();
            List<FlightPrice> priceFlight = returnFlights.get(i).getFlightPrice();
            FlightPrice priceofFlight = priceFlight.get(0);
            
            listData.add("Origin: " + origin + ", Destination: " + destination + ", Price: " + priceofFlight.getCurrencyValue() + priceofFlight.getCurrencyName()
            + ", Airline: " + airline + ", Available Seats: " + seats + ", Connecting Flights: " + connections);
        }
        String[] array = listData.toArray(new String[listData.size()]);
        jList1.setListData(array);
    }
    
    public void updateListSearch(List<Flight> returnFlights) {
        Iterator availableList = returnFlights.iterator();
        Flight nextFlight;
        FlightPrice price;
        List<String> listData = new ArrayList<String>();
        
        for (int i = 0; i < returnFlights.size(); i++) {
            String listEntry = new String();
            String origin = returnFlights.get(i).getOriginCity();
            String destination = returnFlights.get(i).getDestinationCity();
            String airline = returnFlights.get(i).getFlightAirline();
            BigInteger seats = returnFlights.get(i).getAvailableSeats();
            BigInteger connections = returnFlights.get(i).getConnectionsNumber();
            List<FlightPrice> priceFlight = returnFlights.get(i).getFlightPrice();
            FlightPrice priceofFlight = priceFlight.get(0);
            
            listData.add("Origin: " + origin + ", Destination: " + destination + ", Price: " + priceofFlight.getCurrencyValue() + priceofFlight.getCurrencyName()
            + ", Airline: " + airline + ", Available Seats: " + seats + ", Connecting Flights: " + connections);
        }
        String[] array = listData.toArray(new String[listData.size()]);
        if (listData.size() == 0) {
            String[] ErrorArray = {"No Flights Found! Please Try Another Search"};
            jList1.setListData(ErrorArray);
        } else {
        jList1.setListData(array);
        }
    }

    private static double getConversionRate(java.lang.String arg0, java.lang.String arg1) {
        modulewebservices.CurrencyConversionWSService service = new modulewebservices.CurrencyConversionWSService();
        modulewebservices.CurrencyConversionWS port = service.getCurrencyConversionWSPort();
        return port.getConversionRate(arg0, arg1);
    }

    private static java.util.List<java.lang.String> getCurrencyCodes() {
        modulewebservices.CurrencyConversionWSService service = new modulewebservices.CurrencyConversionWSService();
        modulewebservices.CurrencyConversionWS port = service.getCurrencyConversionWSPort();
        return port.getCurrencyCodes();
    }
}
